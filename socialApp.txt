Firstly i installed node-terminal then npm init to create our package.json for managing our dependency since 
npm install express@4.17.1 socket.io@4.5.1 moment@2.29.4
npm install -D(dev) nodemon (to automatically restart anytime we make a change) constantly watch for changes
from:-
- "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  }
To:-
-  "scripts": {
    "start": "node server",
    "dev": "nodemon server"
  },
create server.js which is our backend 
1. import express
2. create express function inside app
3. initialize app at the port num
// app.listen(3000, ( )=>{
//     console.log("server at http://localhost:3000")
// })
start the server app npm run start
4.import 'path'
5, Create path to access frontend 
6. import http module
7. create server variable with method createServer pass-in exress app
const server = http.createServer(app) 
8. then we can initialise the app with 
 server.listen(3000, ( )=>{
 console.log(Running at 3000") 
})
9. import socket module
10. create io then pass-in socketio( ) function
11 initiallise when clent connects with io.connect('connection',( )=>{
 })
12. open main.js add the socket variable then pass in io  function
13 inside the html add the script tag to access the socket.js module in the chat.html
--- <script src="/socket.io/socket.io.js"></script>
14. 
Broadcast when a user connects 
socket.broadcast.emmit //Notify the users except the user that just join
io.emit sends to mesage to connect all available include who just join
socket.emit send message to the client thats connecting
socket.broadcast.emit sends message to all clients except the client thats connecting
15. Listening to message from the input tag
16. Listen to message at the server.js

// function check(){
//   let minPass= 6;
//   // let maxPass =20
//   const getPassword = document.getElementById("password").value;
//   var regex= /^[a-zA-Z0-9!@#$%^&./?*]{6,20}$/;
//   if(password.length < minPass ){
//     alert('Password must be atleast 6')
//     return false;
//   }
//   if(!regex.test(getPassword)){
//     alert('password must contain at least a number and a special character')
//     return false;
//   }
// }